#ifndef SERVICE_h
#define SERVICE_h
#include <iostream>
#include <string>
#include <sstream>
#include <iomanip>

using namespace std;

//service class, object that contains the name, number and fee for an individual service
class service{
    friend class RecordManager;
    public:
        //default constructor
        service();
        //paramaterized constructor takes arguments and assigns them to appropriate data;
        service(const string& name,const string& number, float fee);
        //copy constructor makes a deep copy of all data in the argument
        service(const service& toCopy);
        //takes all paramaters for the object and assigns them appropriately
        bool create(const string& name,const string& number, float fee);
        //copy function makes a deep copy of all data in the argument
        bool copy(const service& toCopy);
        //changes an object name, used for editing
        void setName(const string& name);
        //changes an object fee, used for editing
        void setFee(float);
        //getter for the object fee, returns the value
        float getFee()const;
        //concatenates all data members into a single string delimited by '|'
        string prepareWrite()const;
        //initializes a service with a string generated by prepareWrite()
        friend istream &operator>>(istream &input, service &toInit);
        //Returns bool regarding service code match
        bool numberMatch(const string & number)const;
        //displays the object information
        void display()const;
        //overloaded > operator compares service name
        bool operator>(const service& toCompare)const;
        //overloaded < operator compares service name
        bool operator<(const service& toCompare)const;
        //overloaded == operator compares service number
        bool operator==(const service& toCompare)const;

    private:
        float fee;      //float limited to $999.99
        string name;    //string for name must be between >0 and <21 characters
        string number;  //must be 6 numbers long
};
#endif
//end of service definition
